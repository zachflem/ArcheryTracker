FROM node:14-alpine AS build

WORKDIR /app

COPY ./frontend/package*.json ./

# Clean install dependencies with specific versions
RUN npm cache clean --force && \
    npm install --legacy-peer-deps && \
    npm install ajv@6.12.6 ajv-keywords@3.5.2 react-scripts@4.0.3 --legacy-peer-deps

COPY ./frontend .

# Add build timestamp for cache busting (ensures fresh build)
RUN echo "REACT_APP_BUILD_TIMESTAMP=$(date +%s)" > .env

# Build React app without OpenSSL legacy provider flag
RUN rm -rf node_modules/.cache && \
    CI=false npm run build

# Production environment
FROM nginx:alpine

# Copy built assets from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Copy nginx config
COPY ./docker/nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
